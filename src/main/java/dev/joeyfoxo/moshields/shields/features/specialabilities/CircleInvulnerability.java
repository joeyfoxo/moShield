package dev.joeyfoxo.moshields.shields.features.specialabilities;

import dev.joeyfoxo.moshields.MoShields;
import dev.joeyfoxo.moshields.shields.features.Features;
import dev.joeyfoxo.moshields.shields.features.ability.SpecialAbility;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.entity.ArmorStand;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.inventory.EquipmentSlot;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitTask;
import org.bukkit.util.EulerAngle;
import dev.joeyfoxo.moshields.shields.features.ability.Ability.Abilities;

import java.util.ArrayList;

public class CircleInvulnerability implements SpecialAbility {

    BukkitTask task;

    public void activateAbility(Player player) {
        Features.setActiveSpecialAbility(player.getUniqueId(), Abilities.CIRCULAR_PROTECTION);
    }

    @Override
    public void performAbility(EntityDamageByEntityEvent event) {
        if (event.getEntity() instanceof Player player) {
            spawnSurroundingShields(player);
            event.setCancelled(true);

        }
    }

    @Override
    public void applyEffects() {

    }

    private void spawnSurroundingShields(Player player) {
        ArrayList<Entity> armorStandsSpawned = new ArrayList<>();

        World world = player.getWorld();
        double x, y, z;
        double radius = 0.8;
        for (int i = 0; i < 360; i += 45) {
            x = player.getLocation().getX() + radius * Math.sin(Math.toRadians(i));
            y = player.getLocation().getY() - 0.6;
            z = player.getLocation().getZ() + radius * Math.cos(Math.toRadians(i));

            float rotation = i;

            armorStandsSpawned.add(world.spawn(new Location(world, x, y, z), ArmorStand.class, armorStand -> {
                armorStand.getEquipment().setItemInMainHand(new ItemStack(Material.SHIELD));
                armorStand.setArms(true);
                armorStand.setVisible(false);
                armorStand.setInvulnerable(true);
                armorStand.setGravity(false);
                armorStand.setRightArmPose(new EulerAngle(Math.toRadians(-90), Math.toRadians(-90), 0));
                armorStand.addEquipmentLock(EquipmentSlot.HAND, ArmorStand.LockType.REMOVING_OR_CHANGING);
                //ENSURE THAT NO PLAYER CAN TAKE THE SHIELD
                armorStand.setRotation(360 - rotation, 0);
            }));

            cancelAbility(armorStandsSpawned, player);

        }

    }

    private void cancelAbility(ArrayList<Entity> armorStandsSpawned, Player player) {

        task = Bukkit.getScheduler().runTaskLater(JavaPlugin.getPlugin(MoShields.class), () -> {

            if (!Features.isAbilityActive(player.getUniqueId())) {
                if (task != null) {
                    task.cancel();
                    return;
                }
            }

            for (Entity entity : armorStandsSpawned) {
                entity.remove();
            }
            armorStandsSpawned.clear();
        }, 20);

    }
}
